name: "CI"

on:
  push:
    branches:
      - main
      - dev

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: template-${{ github.ref }}
  PROJECT_PATH: .

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04 # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:mono-4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/${EXPORT_NAME##*/}.exe"
          zip -r windows-release.zip build/windows
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  # export-linux:
  #   name: Linux Export
  #   runs-on: ubuntu-22.04 # Use 22.04 with godot 4
  #   container:
  #     image: barichello/godot-ci:mono-4.4
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono
  #     - name: Linux Build
  #       run: |
  #         mkdir -v -p build/linux
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/${EXPORT_NAME##*/}.x86_64"
  #         zip -r linux-release.zip build/linux
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux
  #         path: build/linux

  # export-mac:
  #   name: Mac Export
  #   runs-on: ubuntu-22.04 # Use 22.04 with godot 4
  #   container:
  #     image: barichello/godot-ci:mono-4.4
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/macos-release.zip"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac
  #         path: build/mac

  release:
    name: Create Release
    needs: [export-windows, export-linux, export-mac]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Create Release
        uses: actions/create-release@v1
        with:
         tag_name: ${{ github.ref_name }}
         release_name: Release ${{ github.ref_name }}
         draft: false
         prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/windows-release.zip
          asset_name: windows-release.zip
          asset_content_type: application/zip
